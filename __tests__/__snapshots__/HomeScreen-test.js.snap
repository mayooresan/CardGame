// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#f8f8f8",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#3464eb",
            "fontSize": 20,
          }
        }
      >
        Reset
      </Text>
    </View>
    <View
      style={
        Object {
          "width": "60%",
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          Object {
            "width": "20%",
          },
        ]
      }
    >
      <Text>
        STEPS:
      </Text>
      <Text>
        0
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders correctly CACard 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "margin": 8,
        },
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/res/assets/background.jpg",
        }
      }
      style={
        Array [
          Object {
            "resizeMode": "stretch",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders correctly CAHeader 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3464eb",
          "fontSize": 20,
        }
      }
    >
      Reset
    </Text>
  </View>
  <View
    style={
      Object {
        "width": "60%",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "width": "20%",
        },
      ]
    }
  >
    <Text>
      STEPS:
    </Text>
    <Text />
  </View>
</View>
`;

exports[`renders correctly CALinkButton 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#3464eb",
        "fontSize": 20,
      }
    }
  />
</View>
`;
